name: Release to Homebrew tap

on:
  push:
    tags:
      - "v*.*.*"     # e.g., v0.1.2

permissions:
  contents: read
  pull-requests: write

env:
  TAP_REPO: jamessawle/homebrew-tap
  # Source of truth inside THIS repo:
  FORMULA_SOURCE_PATH: packaging/homebrew/Formula/dock.rb
  # Destination path inside the TAP repo:
  FORMULA_DEST_PATH: Formula/dock.rb

jobs:
  build-formula:
    name: Build updated formula
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      tarball: ${{ steps.vars.outputs.tarball }}
      sha256: ${{ steps.sha.outputs.sha256 }}
    steps:
      - name: Check out source (dock repo)
        uses: actions/checkout@v4

      - name: Derive version & tarball from tag
        id: vars
        run: |
          echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          echo "tarball=https://github.com/jamessawle/dock/archive/refs/tags/${GITHUB_REF_NAME}.tar.gz" >> "$GITHUB_OUTPUT"

      - name: Compute sha256 of tarball
        id: sha
        run: |
          set -euo pipefail
          curl -Ls -o source.tgz "${{ steps.vars.outputs.tarball }}"
          echo "sha256=$(sha256sum source.tgz | awk '{print $1}')" >> "$GITHUB_OUTPUT"

      - name: Prepare updated formula
        run: |
          set -euo pipefail
          mkdir -p out/Formula
          cp "${FORMULA_SOURCE_PATH}" out/Formula/dock.rb

          URL='${{ steps.vars.outputs.tarball }}'
          SHA='${{ steps.sha.outputs.sha256 }}'

          echo "Injecting:"
          echo "  url:    $URL"
          echo "  sha256: $SHA"

          # Escape for sed (slashes and &)
          URL_ESC=$(printf '%s\n' "$URL" | sed -e 's/[\/&]/\\&/g')
          SHA_ESC=$(printf '%s\n' "$SHA" | sed -e 's/[\/&]/\\&/g')

          # Replace url & sha256 lines (tolerant of indentation/spacing)
          sed -i -E 's|^([[:space:]]*url[[:space:]]*").*(")|\1'"$URL_ESC"'\2|' out/Formula/dock.rb
          sed -i -E 's|^([[:space:]]*sha256[[:space:]]*").*(")|\1'"$SHA_ESC"'\2|' out/Formula/dock.rb

          echo "Result lines:"
          grep -nE '^\s*(url|sha256)\s*"' out/Formula/dock.rb || true

          # Guards: fail if url/sha256 lines not present after edit
          grep -qE '^\s*url\s*"' out/Formula/dock.rb || { echo "ERROR: url line not found"; exit 1; }
          grep -qE '^\s*sha256\s*"' out/Formula/dock.rb || { echo "ERROR: sha256 line not found"; exit 1; }

      - name: Upload updated formula artifact
        uses: actions/upload-artifact@v4
        with:
          name: updated-formula
          path: out/Formula/dock.rb

  pr-to-tap:
    name: Open PR to tap
    needs: build-formula
    runs-on: ubuntu-latest
    steps:
      - name: Download updated formula
        uses: actions/download-artifact@v4
        with:
          name: updated-formula
          path: updated

      - name: Check out tap repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TAP_REPO }}
          token: ${{ secrets.TAP_PUSH_TOKEN }}
          path: tap

      - name: Copy formula into tap worktree (debug view)
        run: |
          set -euo pipefail
          mkdir -p "tap/$(dirname "${{ env.FORMULA_DEST_PATH }}")"
          cp updated/dock.rb "tap/${{ env.FORMULA_DEST_PATH }}"
          echo "Tap tree after copy:"
          (cd tap && git status --porcelain && ls -la "${{ env.FORMULA_DEST_PATH }}" && sed -n '1,60p' "${{ env.FORMULA_DEST_PATH }}" | sed -n '1,20p') || true

      - name: Create/Update PR in tap
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.TAP_PUSH_TOKEN }}
          path: tap
          branch: bump-dock-${{ needs.build-formula.outputs.tag }}
          title: "dock: bump to ${{ needs.build-formula.outputs.tag }}"
          commit-message: "dock: bump to ${{ needs.build-formula.outputs.tag }}"
          body: |
            Automated bump from tag **${{ needs.build-formula.outputs.tag }}**.
            - url: `${{ needs.build-formula.outputs.tarball }}`
            - sha256: `${{ needs.build-formula.outputs.sha256 }}`
            Source formula is maintained in the app repo.
          # base omitted -> uses the tap's default branch automatically
          delete-branch: false
